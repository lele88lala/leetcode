Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    Open brackets must be closed by the same type of brackets.
    Open brackets must be closed in the correct order.

Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true

Example 2:

Input: "()[]{}"
Output: true

Example 3:

Input: "(]"
Output: false

Example 4:

Input: "([)]"
Output: false

Example 5:

Input: "{[]}"
Output: true


```
/**
 * @param {string} s
 * @return {boolean}
 */
var isValid = function(s) {
    var obj = { '(': ')', '{': '}', '[': ']' }
        if (s === "") {
            return true
        }
        var matchs = function (pre, post) {
            if (obj[pre] === post) {
                return true
            } else {
                false
            }
        }
        var sArr = s.split("")
        var stack = []
        for (var i = 0; i < sArr.length; i++) {
            if (sArr[i] === '(' || sArr[i] === '{' || sArr[i] === '[') {
                stack.push(sArr[i])
            } else {
                if (matchs(stack[stack.length - 1], sArr[i])) {
                    stack.pop()
                } else {
                    stack.push(sArr[i])
                }
            }
        }
        if (stack.length > 0) {
            return false
        } else { return true }
    
};